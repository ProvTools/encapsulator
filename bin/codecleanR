#!/usr/bin/env ruby

require "codecleanR"

def usage
  puts "USAGE\n\n"
  puts '--info <path to provjson> display information about the provenance graph'
  puts '--jpg <path to provjson> output graph as jpg'
  puts '--png <path to provjson> output graph as png'
  puts '--svg <path to provjson> output graph as svg'
  puts '--code <path to provjson> <output id> output code needed to generate the node'
  puts '--run <path to R script> run the provided r script'
end

if ARGV[0] == '--info'
  CodecleanR::EdgeCounter.new.read_json_file(ARGV[1]).show
  CodecleanR::VertexCounter.new.read_json_file(ARGV[1]).show
  CodecleanR::ProvJSONtoRGL.new.read_json_file(ARGV[1]).information
elsif ARGV[0] == '--jpg'
  CodecleanR::ProvJSONtoRGL.new.read_json_file(ARGV[1]).png
elsif ARGV[0] == '--png'
  CodecleanR::ProvJSONtoRGL.new.read_json_file(ARGV[1]).png
elsif ARGV[0] == '--svg'
  CodecleanR::ProvJSONtoRGL.new.read_json_file(ARGV[1]).svg
elsif ARGV[0] == '--code'
  $json_name = ARGV[1]
  #v = CodecleanR::VertexCounter.new.read_json_file($json_name)
  script = CodecleanR::ProvJSONtoRGL.new.read_json_file(ARGV[1]).script ARGV[2]
  if script.nil?
    puts 'This is an input fule.'
  else
    puts script
  end
elsif ARGV[0] == '--run'
  require 'rinruby'
  r = RinRuby.new(echo: false)
  r.eval "library('RDataTracker')"
  r.eval "ddg.run('#{ARGV[1]}')"
else
  usage()
end
